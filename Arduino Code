#include <Wire.h>
#include <LiquidCrystal.h>
#include <Servo.h>

const int forwards = 8;                           // Line Actuator
const int backwards = 9;

Servo servo1;
Servo servo2;
Servo servo3;
Servo servo4;
Servo servo5;
Servo servo6;
Servo servo7;
void RunServo();

LiquidCrystal lcd(A8,A9,A10,A11,A12,A13);  // set the LCD address to 0x27 for a 16 chars and 2 line display


// this constant won't change:
const int  Up_buttonPin   = 21;    // the pin that the pushbutton is attached to
const int  Down_buttonPin = 20;

int sensorPin = A5; //LDR sensor
int relay = 19; // Led light - night vision

int sensorValue = 0;

// Variables will change:
int buttonPushCounter = 0;   // counter for the number of button presses
int up_buttonState = 0;         // current state of the up button
int up_lastButtonState = 0;     // previous state of the up button

int down_buttonState = 0;         // current state of the up button
int down_lastButtonState = 0;     // previous state of the up button
bool bPress = false;

void setup()
{
  lcd.begin(16,2);
  pinMode( Up_buttonPin , INPUT_PULLUP);
  pinMode( Down_buttonPin , INPUT_PULLUP);
 Serial.begin(9600);
    Serial.println("Time");
 
  pinMode(relay,OUTPUT);


  // Print a message to the LCD.
  lcd.setCursor(0,0);
  lcd.print("Motor Count: ");
  lcd.setCursor(12,0);
  lcd.print(buttonPushCounter);
 
  pinMode(forwards, OUTPUT);                     // Line Actuator
  pinMode(backwards,OUTPUT);        

  servo1.attach(3);   // Leveller
  servo2.attach(5);   // Left Hoe
  servo3.attach(6);   // Seeder Left
  servo4.attach(4);   // Right Hoe
  servo5.attach(10);  //cutter
  servo6.attach(7);   // Seeder Right
  servo7.attach(11);   //left cutter
}


void loop()
{
   checkUp();
   checkDown();

 digitalWrite(forwards, LOW);
 digitalWrite(backwards, HIGH);                                    //Line Actuator
  RunServo();
  RunServo();
  RunServo();
  RunServo();

 digitalWrite(forwards, HIGH);
 digitalWrite(backwards, LOW);
  RunServo();
  RunServo();
  RunServo();
  RunServo();
 
}

 void RunServo(){
  float startTime = 0;
  float endTime = 0;
  float Time = 0;  
    servo1.write(30);
    servo2.write(30);
    servo3.write(10);
    servo4.write(30);
    servo5.write(50);
    servo6.write(60);
    servo7.write(-40); //left cutter
//    delay(2000);
    startTime = millis();
    Time =0;
    Serial.println("Actuator Up");
    while (Time<2000){
       checkUp();
       checkDown();
      endTime = millis();
      Time = endTime - startTime;
      Serial.println(Time);
    }
   
  servo1.write(-40);
  servo2.write(0);
  servo3.write(45);
  servo4.write(0);
  servo5.write(120);
  servo6.write(20);
  servo7.write(15);
//  delay (2000);
    Time =0;
    startTime = millis();
    Serial.println("Actuator down");
    while (Time<2000){
       checkUp();
       checkDown();
      endTime = millis();
      Time = endTime - startTime;
      Serial.println(Time);
    }
   
 }

void checkUp()
{
  up_buttonState = digitalRead(Up_buttonPin);

  // compare the buttonState to its previous state
  if (up_buttonState != up_lastButtonState) {
    // if the state has changed, increment the counter
    if (up_buttonState == LOW) {
        bPress = true;
      // if the current state is HIGH then the button went from off to on:
      buttonPushCounter++;
    //  lcd.println("on");
      //lcd.print("number of button pushes: ");
      //lcd.println(buttonPushCounter);
    } else {
      // if the current state is LOW then the button went from on to off:
      //lcd.println("off");
    }
    // Delay a little bit to avoid bouncing
   // delay(50);
  }
  // save the current state as the last state, for next time through the loop
  up_lastButtonState = up_buttonState;
}
void checkDown()
{
  down_buttonState = digitalRead(Down_buttonPin);

  // compare the buttonState to its previous state
  if (down_buttonState != down_lastButtonState) {
    // if the state has changed, increment the counter
    if (down_buttonState == LOW) {
        bPress = true;
      // if the current state is HIGH then the button went from off to on:
      buttonPushCounter--;
     
      //lcd.println("on");
      //lcd.print("number of button pushes: ");
      //lcd.println(buttonPushCounter);
    } else {
      // if the current state is LOW then the button went from on to off:
      //lcd.println("off");
    }
    // Delay a little bit to avoid bouncing
   // delay(50);
  }
  // save the current state as the last state, for next time through the loop
  down_lastButtonState = down_buttonState;

sensorValue = analogRead(sensorPin);                       //Sun Light
if (sensorValue <= 50) {
// turn the ledPin on
digitalWrite(relay,HIGH);
lcd.setCursor(1,1);
lcd.print("  HIGH Light     ");
delay(50);

}
if  (sensorValue < 100 && sensorValue > 50) {
digitalWrite(relay,HIGH);
lcd.setCursor(1,1);
lcd.print("  Medium Light    ");
delay(50);

}

if (sensorValue >= 100) {
digitalWrite(relay,LOW);
lcd.setCursor(1,1);
lcd.print("  LOW  Light      ");
delay(50);

}
   if( bPress){
       bPress = false;
      lcd.setCursor(12,0);
      lcd.print("              ");
      lcd.setCursor(12,0);
      lcd.print(buttonPushCounter);
   }

}
